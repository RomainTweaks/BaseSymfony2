<?php

namespace Sdz\BlogBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * ArticleRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ArticleRepository extends EntityRepository
{
    public function findWithCategorie(array $categories){
        $qb = $this->createQueryBuilder('a');
        
        $qb = $this->whereCategorie($qb, $categories);
        
        return $qb->getQuery()->getResult();
    }
    
    private function whereCategorie(\Doctrine\ORM\QueryBuilder $qb, array $categories){
        $qb->join('a.categorie', 'c')
           ->where($qb->expr()->in('c.nom', $categories));
    }
    
    public function getArticles($nbrPage, $page){
        if( $page < 1 )
        {
          // On dÃ©clenche une exception NotFoundHttpException
          // Cela va afficher la page d'erreur 404 (on pourra personnaliser cette page plus tard d'ailleurs)
          throw $this->createNotFoundException('Page inexistante (page = '.$page.')');
        }
        
        $query = $this->createQueryBuilder('a')
                ->leftJoin('a.image', 'i')
                    ->addSelect('i')
                ->leftJoin('a.categories', 'c')
                    ->addSelect('c')
                ->orderBy('a.date', 'ASC')
                ->getQuery();
        
        $query->setFirstResult(($page-1) * $nbrPage)
                ->setMaxResults($nbrPage);
        
        return new Paginator($query);
    }
}
